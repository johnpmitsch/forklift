---
- include_tasks: ssh.yml

- name: Install packages
  package:
    name: "{{ item }}"
    state: present
  with_items:
    - gcc
    - git
    - libffi-devel
    - openssl-devel
    - python-devel
    - python-pip
    - python-virtualenv

- name: Clone robottelo
  git:
    repo: "{{ robottelo_url }}"
    dest: "{{ robottelo_directory }}"
    update: yes
    force: yes
    version: "{{ robottelo_version }}"

- name: Update setuptools
  pip:
    name: setuptools
    state: latest
    virtualenv: "{{ robottelo_virtualenv_path }}"

- name: Upgrade pip in the virtualenv
  pip:
    name: pip
    state: latest
    virtualenv: "{{ robottelo_virtualenv_path }}"

- name: Install requirements
  pip:
    requirements: "{{ robottelo_directory }}/requirements.txt"
    virtualenv: "{{ robottelo_virtualenv_path }}"
    chdir: "{{ robottelo_directory }}"

- name: robottelo properties file
  shell: cp robottelo.properties.sample robottelo.properties
  args:
    chdir: "{{ robottelo_directory }}"

- name: Set robottelo hostname
  lineinfile:
    dest: "{{ robottelo_directory }}/robottelo.properties"
    regexp: "^hostname="
    line: "hostname={{ robottelo_hostname }}"
    state: present
    backrefs: yes

- name: Set robottelo SSH
  lineinfile:
    dest: "{{ robottelo_directory }}/robottelo.properties"
    regexp: "^ssh_key="
    line: "ssh_key={{ robottelo_ssh_key }}"
    state: present
    backrefs: yes

- name: Set robottelo logging
  replace:
    dest: "{{ robottelo_directory }}/logging.conf"
    regexp: "^level=DEBUG"
    replace: "level=INFO"

- name: Run tests
  command: "{{ robottelo_virtualenv_path }}/bin/py.test --junit-xml={{ robottelo_junit_file }}
             -m '{{ robottelo_test_options[robottelo_test_type] | default(robottelo_test_options.default) }}'
             {{ robottelo_test_path[robottelo_test_type] | default(robottelo_test_path.default) }}"
  args:
    chdir: "{{ robottelo_directory }}"
