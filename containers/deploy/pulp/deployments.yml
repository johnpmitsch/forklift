---
- name: Scale Pulp to 0
  openshift_raw:
      name: pulp
      namespace: "{{ project_name }}"
      replicas: 0
  tags:
    - stop
    - restart
- name: Scale Pulp Worker to 0
  openshift_raw:
      name: pulp-worker
      namespace: "{{ project_name }}"
      replicas: 0
  tags:
    - stop
    - restart
- name: Scale Pulp Celerybeat to 0
  openshift_raw:
      name: pulp-celerybeat
      namespace: "{{ project_name }}"
      replicas: 0
  tags:
    - stop
    - restart
- name: Scale Pulp Resource Manager to 0
  openshift_raw:
      name: pulp-resource-manager
      namespace: "{{ project_name }}"
      replicas: 0
  tags:
    - stop
    - restart
- name: Scale Mongodb to 0
  openshift_raw:
      name: mongodb
      namespace: "{{ project_name }}"
      replicas: 0
  tags:
    - stop
    - restart
- name: Scale Content Server to 0
  openshift_raw:
      name: content-server
      namespace: "{{ project_name }}"
      replicas: 0
  tags:
    - stop
    - restart
- name: Scale Squid to 0
  openshift_raw:
      name: squid
      namespace: "{{ project_name }}"
      replicas: 0
  tags:
    - stop
    - restart
- name: Scale Pulp Streamer to 0
  openshift_raw:
      name: pulp-streamer
      namespace: "{{ project_name }}"
      replicas: 0
  tags:
    - stop
    - restart

- name: Create Pulp deployment
  openshift_raw:
      state: "{{ deployment_state }}"
      force: false
      definition:
          apiVersion: v1
          kind: DeploymentConfig
          metadata:
              name: pulp
              namespace: "{{ project_name }}"
              labels:
                  app: foreman
                  service: pulp
          spec:
              template:
                  metadata:
                      labels:
                          app: foreman
                          service: pulp
                  spec:
                      containers:
                        - name: pulp
                          securityContext: {}
                          state: present
                          volumeMounts:
                            - readOnly: true
                              mountPath: /etc/pki/pulp/private
                              name: keys
                            - readOnly: true
                              mountPath: /etc/pki/pulp/certs
                              name: certs
                            - readOnly: false
                              mountPath: /var/lib/pulp
                              name: pulp-data
                            - readOnly: false
                              mountPath: /etc/puppet
                              name: puppet-data
                          image: "{{ registry }}/pulp:latest"
                      serviceAccount: anyuid
                      serviceAccountName: anyuid
                      volumes:
                        - name: keys
                          secret:
                              items:
                                - path: pulp.key
                                  key: pulp.key
                                - path: ca.key
                                  key: ca.key
                              secretName: keys
                        - secret:
                              items:
                                - path: ca.crt
                                  key: ca.crt
                                - path: pulp.crt
                                  key: pulp.crt
                              secretName: certs
                          name: certs
                        - name: pulp-data
                          persistentVolumeClaim:
                              claimName: pulp-data
                        - name: puppet-data
                          persistentVolumeClaim:
                              claimName: puppet-data
              replicas: 1
              strategy:
                  type: Rolling
                  rollingParams:
                      timeoutSeconds: 900
  tags:
    - start
    - restart
    - destroy
- name: Create Pulp Worker deployment
  openshift_raw:
      state: "{{ deployment_state }}"
      force: false
      definition:
          apiVersion: v1
          kind: DeploymentConfig
          metadata:
              name: pulp-worker
              namespace: "{{ project_name }}"
              labels:
                  app: foreman
                  service: pulp-worker
          spec:
              template:
                  metadata:
                      labels:
                          app: foreman
                          service: pulp-worker
                  spec:
                      serviceAccount: anyuid
                      serviceAccountName: anyuid
                      containers:
                        - name: pulp-worker
                          securityContext: {}
                          state: present
                          volumeMounts:
                            - readOnly: false
                              mountPath: /var/lib/pulp
                              name: pulp-data
                            - readOnly: false
                              mountPath: /etc/puppet
                              name: puppet-data
                          image: "{{ registry }}/pulp-worker:latest"
                      volumes:
                        - name: pulp-data
                          persistentVolumeClaim:
                              claimName: pulp-data
                        - name: puppet-data
                          persistentVolumeClaim:
                              claimName: puppet-data
              replicas: "{{ pulp_worker_count }}"
              strategy:
                  type: Rolling
                  rollingParams:
                      timeoutSeconds: 900
  tags:
    - start
    - restart
    - destroy
- name: Create Pulp Celeybeat deployment
  openshift_raw:
      state: "{{ deployment_state }}"
      force: false
      definition:
          apiVersion: v1
          kind: DeploymentConfig
          metadata:
              name: pulp-celerybeat
              namespace: "{{ project_name }}"
              labels:
                  app: foreman
                  service: pulp-celerybeat
          spec:
              template:
                  metadata:
                      labels:
                          app: foreman
                          service: pulp-celerybeat
                  spec:
                      containers:
                        - name: pulp-celerybeat
                          securityContext: {}
                          state: present
                          image: "{{ registry }}/pulp-celerybeat:latest"
                      serviceAccount: anyuid
                      serviceAccountName: anyuid
              replicas: 1
              strategy:
                  type: Rolling
                  rollingParams:
                      timeoutSeconds: 900
  tags:
    - start
    - restart
    - destroy
- name: Create Pulp Resource Manager deployment
  openshift_raw:
      state: "{{ deployment_state }}"
      force: false
      definition:
          apiVersion: v1
          kind: DeploymentConfig
          metadata:
              name: pulp-resource-manager
              namespace: "{{ project_name }}"
              labels:
                  app: foreman
                  service: pulp-resource-manager
          spec:
              template:
                  metadata:
                      labels:
                          app: foreman
                          service: pulp-resource-manager
                  spec:
                      containers:
                        - name: pulp-resource-manager
                          securityContext: {}
                          state: present
                          image: "{{ registry }}/pulp-resource-manager:latest"
                      serviceAccount: anyuid
                      serviceAccountName: anyuid
              replicas: 1
              strategy:
                  type: Rolling
                  rollingParams:
                      timeoutSeconds: 900
  tags:
    - start
    - restart
    - destroy
- name: Create Mongodb deployment
  openshift_raw:
      state: "{{ deployment_state }}"
      force: false
      definition:
          apiVersion: v1
          kind: DeploymentConfig
          metadata:
              name: mongodb
              namespace: "{{ project_name }}"
              labels:
                  app: foreman
                  service: mongodb
          spec:
              template:
                  metadata:
                      labels:
                          app: foreman
                          service: mongodb
                  spec:
                      containers:
                        - name: mongodb
                          securityContext: {}
                          state: present
                          env:
                            - name: MONGODB_USER
                              value: admin
                            - name: MONGODB_PASSWORD
                              value: admin
                            - name: MONGODB_DATABASE
                              value: pulp_database
                            - name: MONGODB_ADMIN_PASSWORD
                              value: admin
                          args:
                            - run-mongod
                          volumeMounts:
                            - readOnly: false
                              mountPath: /var/lib/mongodb/data
                              name: mongodb-data
                          image: "centos/mongodb-34-centos7:latest"
                      volumes:
                        - name: mongodb-data
                          persistentVolumeClaim:
                              claimName: mongodb-data
              replicas: 1
              strategy:
                  type: Rolling
                  rollingParams:
                      timeoutSeconds: 900
  tags:
    - start
    - restart
    - destroy
- name: Create Content Server deployment
  openshift_raw:
      state: "{{ deployment_state }}"
      force: false
      definition:
          apiVersion: v1
          kind: DeploymentConfig
          metadata:
              name: content-server
              namespace: "{{ project_name }}"
              labels:
                  app: foreman
                  service: content-server
          spec:
              template:
                  metadata:
                      labels:
                          app: foreman
                          service: content-server
                  spec:
                      containers:
                        - name: content-server
                          securityContext: {}
                          state: present
                          volumeMounts:
                            - readOnly: true
                              mountPath: /etc/pki/pulp/private
                              name: keys
                            - readOnly: true
                              mountPath: /etc/pki/pulp/certs
                              name: certs
                            - readOnly: false
                              mountPath: /var/lib/pulp
                              name: pulp-data
                            - readOnly: true
                              mountPath: /var/www/html/pub/
                              name: pub-data
                          ports:
                            - protocol: TCP
                              containerPort: 80
                          image: "{{ registry }}/content-server:latest"
                      serviceAccount: anyuid
                      serviceAccountName: anyuid
                      volumes:
                        - secret:
                              items:
                                - path: pulp.key
                                  key: pulp.key
                              secretName: keys
                          name: keys
                        - secret:
                              items:
                                - path: ca.crt
                                  key: ca.crt
                                - path: pulp.crt
                                  key: pulp.crt
                              secretName: certs
                          name: certs
                        - name: pulp-data
                          persistentVolumeClaim:
                              claimName: pulp-data
                        - name: pub-data
                          persistentVolumeClaim:
                              claimName: pub-data
              replicas: 1
              strategy:
                  type: Rolling
                  rollingParams:
                      timeoutSeconds: 900
  tags:
    - start
    - restart
    - destroy
- name: Create Squid deployment and scale up
  openshift_raw:
      state: "{{ deployment_state }}"
      force: false
      definition:
          apiVersion: v1
          kind: DeploymentConfig
          metadata:
              name: squid
              namespace: "{{ project_name }}"
              labels:
                  app: foreman
                  service: squid
          spec:
              template:
                  metadata:
                      labels:
                          app: foreman
                          service: squid
                  spec:
                      containers:
                        - name: squid
                          securityContext: {}
                          state: present
                          ports:
                            - protocol: TCP
                              containerPort: 3128
                          image: "{{ registry }}/squid:latest"
                      serviceAccount: anyuid
                      serviceAccountName: anyuid
              replicas: 1
              strategy:
                  type: Rolling
                  rollingParams:
                      timeoutSeconds: 900
  tags:
    - start
    - restart
    - destroy
- name: Create Pulp Streamer deployment and scale up
  openshift_raw:
      state: "{{ deployment_state }}"
      force: false
      definition:
          apiVersion: v1
          kind: DeploymentConfig
          metadata:
              name: pulp-streamer
              namespace: "{{ project_name }}"
              labels:
                  app: foreman
                  service: pulp-streamer
          spec:
              template:
                  metadata:
                      labels:
                          app: foreman
                          service: pulp-streamer
                  spec:
                      containers:
                        - name: pulp-streamer
                          securityContext: {}
                          state: present
                          ports:
                            - protocol: TCP
                              containerPort: 8751
                          image: "{{ registry }}/pulp-streamer:latest"
                      serviceAccount: anyuid
                      serviceAccountName: anyuid
              replicas: 1
              strategy:
                  type: Rolling
                  rollingParams:
                      timeoutSeconds: 900
  tags:
    - start
    - restart
    - destroy
